for (i in seq_along(scenarios)) {
rolling_3_month = scenarios[[i]][1]
exclude_winter_storm_uri = scenarios[[i]][2]
run_polynomial_weather = scenarios[[i]][3]
run_regressions(covar_version_input, rolling_3_month,exclude_winter_storm_uri, run_polynomial_weather)
}
for (i in seq_along(scenarios)) {
rolling_3_month = scenarios[[i]][1]
exclude_winter_storm_uri = scenarios[[i]][2]
run_polynomial_weather = scenarios[[i]][3]
run_regressions(covar_version_input, rolling_3_month,exclude_winter_storm_uri, run_polynomial_weather)
}
for (i in seq_along(scenarios)) {
rolling_3_month = scenarios[[i]][1]
exclude_winter_storm_uri = scenarios[[i]][2]
run_polynomial_weather = scenarios[[i]][3]
run_regressions(covar_version_input, rolling_3_month,exclude_winter_storm_uri, run_polynomial_weather)
}
if (!require("pacman")) install.packages("pacman")
if (!require("pacman")) install.packages("pacman")
#if (!require("pacman")) install.packages("pacman")
pacman::p_load('tidyverse', 'ggplot2', 'readxl', 'janitor', 'lubridate', 'geojsonio', 'broom', 'sp', 'zoo', 'fastDummies', 'stargazer', 'RStata', 'suncalc',
'cowplot', 'olsrr', 'sf', 'MESS', 'dplyr', 'modelsummary')
print('Program Complete')
print('Program Complete')
print('Program Complete')
\_underbidding
covar_version = 'base_covars'
df_timeseries_data <- df_timeseries_data %>%
dummy_cols(select_columns = c('year', 'month', 'day_of_week', 'hour', 'minute'))
df_timeseries_data <- df_timeseries_data %>%
dummy_cols(select_columns = c('year', 'month', 'day_of_week', 'hour', 'minute'))
covar_version = 'base_covars'
covariates <- list(c('year_2022','year_2021','year_2020','year_2019','year_2018','year_2017', 'year_2016'),
c('month_12','month_11','month_10','month_9','month_8','month_7','month_6','month_5','month_4', 'month_3','month_2'),
c('day_of_week_1', 'day_of_week_2','day_of_week_3','day_of_week_4','day_of_week_5','day_of_week_6'),
c('hour_23', 'hour_22','hour_21', 'hour_20', 'hour_19','hour_18', 'hour_17', 'hour_16','hour_15', 'hour_14', 'hour_13','hour_12', 'hour_11', 'hour_10',
'hour_9','hour_8', 'hour_7', 'hour_6','hour_5', 'hour_4', 'hour_3','hour_2', 'hour_1'),
c('minute_45', 'minute_30','minute_15'),
c('ng_gw', 'renewables_gw', 'other_gw'),
c('temp_midpoint_cent'),c('weather_wnds'),
c('ng_price'),
c('int_tot_gen_gas_gw', 'int_tot_gen_renewable_gw','int_tot_gen_other_gw'),
c('rttotcap_gw'),
c('scarcity_measure'),
c('active'),
c('total_pa'),
c('price')
)
df_phase_1 <- df_timeseries_data %>%
filter_at(vars(unlist(covariates)),all_vars(!is.na(.)))
rm(df_timeseries_data)
print('column names')
print(names(df_phase_1))
# write_csv(df_phase_1[,unlist(covariates)],'../Images/Regressions/rls_for_robin/data/underbidding_dataset.csv')
final_covariate_names  <- c('2022-year', '2021-year', '2020-year', '2019-year', '2018-year', '2017-year', '2016-year',
'12-month', '11-month', '10-month', '9-month', '8-month', '7-month', '6-month', '5-month', '4-month', '3-month', '2-month',
'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday',
'23-hour', '22-hour', '21-hour', '20-hour', '19-hour', '18-hour', '17-hour', '16-hour', '15-hour', '14-hour', '13-hour', '12-hour', '11-hour', '10-hour', '9-hour', '8-hour', '7-hour', '6-hour', '5-hour', '4-hour', '3-hour', '2-hour', '1-hour',
'45-minute', '30-minutes', '15-minute',
'Nat. Gas Capacity - GW', 'Renewable Capacity - GW', 'Other Capacity - GW',
'Midpoint Temp. ', 'Wind speed km/hr', 'Natural Gas Price - $/MMBtu',
'Supply Nat. Gas - GW', 'Supply Renewables - GW', 'Supply Other - GW',
'Reserve Capacity - GW', 'Capacity Utilization - %',
'Incentive Active - Y/N','Incentive Payment - $/MW',
'Constant')
#change weather covariate to polynomial form, dependent on the covariate version.
if (run_polynomial_weather) {
print('this is a polynomial weather model')
if (covar_version == 'base_covars'){
covariates[[7]] <- c('temp_midpoint_cent', 'temp_midpoint_sq')
print(length(unlist(covariates)))
final_covariate_names  <- c('2022-year', '2021-year', '2020-year', '2019-year', '2018-year', '2017-year', '2016-year',
'12-month', '11-month', '10-month', '9-month', '8-month', '7-month', '6-month', '5-month', '4-month', '3-month', '2-month',
'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday',
'23-hour', '22-hour', '21-hour', '20-hour', '19-hour', '18-hour', '17-hour', '16-hour', '15-hour', '14-hour', '13-hour', '12-hour', '11-hour', '10-hour', '9-hour', '8-hour', '7-hour', '6-hour', '5-hour', '4-hour', '3-hour', '2-hour', '1-hour',
'45-minute', '30-minutes', '15-minute',
'Nat. Gas Capacity - GW', 'Renewable Capacity - GW', 'Other Capacity - GW',
'Midpoint Temp. ', 'Midpoint Temp. Sq.',  'Wind speed km/hr', 'Natural Gas Price - $/MMBtu',
'Supply Nat. Gas - GW', 'Supply Renewables - GW', 'Supply Other - GW',
'Reserve Capacity - GW', 'Capacity Utilization - %',
'Incentive Active - Y/N','Incentive Payment - $/MW'
)
}
print('Post Polynomial Weather Covars')
print(covariates)
}
source("C:/data/ercot_incentive_effects/R_files/run_rls_underbidding_timeseries_model.R")
source("C:/data/ercot_incentive_effects/R_files/run_ercot_program.R", echo = TRUE)
source("C:/data/ercot_incentive_effects/R_files/run_ercot_program.R", echo = TRUE)
source("C:/data/ercot_incentive_effects/R_files/run_ercot_program.R", echo = TRUE)
source("C:/data/ercot_incentive_effects/R_files/run_ercot_program.R", echo = TRUE)
source("C:/data/ercot_incentive_effects/R_files/run_ercot_program.R", echo = TRUE)
source("C:/data/ercot_incentive_effects/R_files/run_ercot_program.R", echo = TRUE)
